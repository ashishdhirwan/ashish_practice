kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ template "my-chart.fullname" . }}-deploy-helm-tag
spec:
  replicas: {{ .Values.replicaCount }}
#  minReadySeconds: 30
#  strategy:
#    type: RollingUpdate
#    rollingUpdate:
#      maxSurge: 1
#      {{ if gt .Values.replicaCount 2.0}}
#      maxUnavailable: 0
#      {{ else }}
#      maxUnavailable: 1
#      {{ end }}
  selector:
    matchLabels:
      app: webservers
  template:
    metadata:
      labels:
        chart:  {{ template "my-chart.fullname" . }}
        app: webservers
    spec:
      containers:
      - name: deploy-helm
        image: "{{ .values.image.repository }}:{{ .values.image.tag }}"
        ports:
        - containerPort: "{{ .values.port }}"
        env:
        - name: projectName
          value: "{{ .values.name }}"

 #       - name: Name
 #         value: "{{ .project.values.Name }}"
#        volumeMounts:
#        - mountPath: "/usr/data"
#          name: conf-vol-helm
#    volumes:
#    - name: conf-vol-hel
#      configMap:
#      - name: myconfile 
#        key: persistentVolumeClaim
#      #  persistentVolumeClaim:
#      # claimName: mypvc
